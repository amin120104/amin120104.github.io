{"version":3,"sources":["components/Header.js","components/Weather.js","components/WeatherForm.js","components/SetCountry.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Weather","this","props","temp","humidity","description","windspeed","error","SetCountry","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","country","region","val","setState","_this2","_this$state","onSubmit","getweather","rcrs_es","value","name","onChange","selectCountry","selectRegion","type","API_KEY","App","undefined","desc","getWeather","_callee","e","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","console","log","fetch","concat","sent","json","cod","main","weather","wind","speed","stop","components_Header","components_SetCountry","components_Weather","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.64cc71c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    \n    render() { \n        return ( \n            <div className=\"container weather-header\">\n                <h1><span>My Weather</span></h1>\n            </div>\n         );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\n\nclass Weather extends Component {\n    \n    render() { \n        return ( \n            <div className=\"container weather-result\">\n\n                {this.props.temp ? (<p>Current Temperature: <span>{this.props.temp}</span></p>) : null}\n                {this.props.temp ? (<p>Current humidity: <span>{this.props.humidity}</span></p>) : null}\n                {this.props.temp ? (<p>Description: <span>{this.props.description}</span></p>) : null}\n                {this.props.temp ? (<p>Current wind speed: <span>{this.props.windspeed} km/h</span></p>) : null}\n                {this.props.error ? (<p>Sorry: {this.props.error}</p>) : null}\n\n            </div>\n         );\n    }\n}\n \nexport default Weather;","import React, { Component } from 'react';\n\nclass WeatherForm extends Component {\n    \n    render() { \n        return ( \n            <div className=\"container search-box\">\n                <p>Search your perfect weather here...</p>\n                <form onSubmit={this.props.getweather}>\n                    <input type=\"text\" name=\"country\" placeholder=\"Type Your Country name...\" />\n                    <input type=\"text\" name=\"city\" placeholder=\"Type Your City name...\" />\n                    <button type=\"submit\">Get Weather</button>\n                </form>\n            </div>\n         );\n    }\n}\n \nexport default WeatherForm;","import React, { Component } from 'react';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\nclass SetCountry extends Component {\n    constructor (props) {\n      super(props);\n      this.state = { country: '', region: '' };\n    }\n  \n    selectCountry (val) {\n      this.setState({ country: val });\n    }\n  \n    selectRegion (val) {\n      this.setState({ region: val });\n    }\n  \n    render () {\n      const { country, region } = this.state;\n      return (\n        <div className=\"container search-box\">\n            <form onSubmit={this.props.getweather}>\n                <CountryDropdown\n                    value={country}\n                    name=\"country\"\n                    onChange={(val) => this.selectCountry(val)} />\n                <RegionDropdown\n                    country={country}\n                    value={region}\n                    name=\"region\"\n                    onChange={(val) => this.selectRegion(val)} />\n                <button type=\"submit\">Get Weather</button>    \n            </form>\n        </div>\n      );\n    }\n  }\n\nexport default SetCountry;  ","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport WeatherForm from './components/WeatherForm';\nimport Weather from './components/Weather';\nimport SetCountry from './components/SetCountry';\n\nconst API_KEY = \"5a6850a6f54937604d9e14f3c00ac712\";\n\nclass App extends Component {\n\n  state = {\n    temp: undefined,\n    humidity: undefined,\n    desc: undefined,\n    windspeed: undefined,\n    error: undefined\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const region = e.target.elements.region.value;\n\n    console.log(country);\n    console.log(region);\n\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${region},${country}&mode=json&appid=${API_KEY}&units=metric`);\n\n    const data = await api_call.json();\n    console.log(data);\n    if(data.cod === 200) {\n      this.setState({\n        temp: data.main.temp,\n        humidity: data.main.humidity,\n        desc: data.weather[0].description,\n        windspeed: data.wind.speed,\n        error: undefined\n      })\n    }\n    else {\n      this.setState({\n        temp: undefined,\n        humidity: undefined,\n        desc: undefined,\n        windspeed: undefined,\n        error: \"Your Weather is not found or you maybe not set your country and city\"\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Header />\n          <SetCountry getweather={this.getWeather} />\n          {/* <WeatherForm getweather={this.getWeather} /> */}\n          <Weather \n            temp={this.state.temp}\n            humidity={this.state.humidity}\n            description={this.state.desc}\n            windspeed={this.state.windspeed}\n            error={this.state.error}\n          />\n          {console.log(this.state.error)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}